{
  "openapi": "3.0.0",
  "info": {
    "title": "OAuth Authorization Code API",
    "version": "1.0.0",
    "description": "Test API with OAuth 2.0 Authorization Code + PKCE flow"
  },
  "servers": [
    {
      "url": "https://api.example.com",
      "description": "Test API server"
    }
  ],
  "security": [
    {
      "oauth2AuthCode": ["read", "write"]
    }
  ],
  "paths": {
    "/user/profile": {
      "get": {
        "summary": "Get user profile",
        "description": "Retrieve the authenticated user's profile information",
        "operationId": "getUserProfile",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user profile",
        "description": "Update the authenticated user's profile information",
        "operationId": "updateUserProfile",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/settings": {
      "get": {
        "summary": "Get user settings",
        "description": "Retrieve user preferences and settings",
        "operationId": "getUserSettings",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "Settings retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSettings"
                }
              }
            }
          }
        }
      }
    },
    "/data": {
      "get": {
        "summary": "List user data",
        "description": "Retrieve user-specific data items",
        "operationId": "listUserData",
        "tags": ["Data"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of items to return",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of items to skip",
            "schema": {
              "type": "integer",
              "default": 0,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataList"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create data item",
        "description": "Create a new data item for the authenticated user",
        "operationId": "createDataItem",
        "tags": ["Data"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataItemCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Data item created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataItem"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "oauth2AuthCode": {
        "type": "oauth2",
        "description": "OAuth 2.0 Authorization Code flow with PKCE for secure user authentication",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://auth.example.com/oauth/authorize",
            "tokenUrl": "https://auth.example.com/oauth/token",
            "refreshUrl": "https://auth.example.com/oauth/refresh",
            "scopes": {
              "read": "Read access to user data",
              "write": "Write access to user data",
              "profile": "Access to user profile information",
              "settings": "Access to user settings"
            }
          }
        },
        "x-pkce": true
      }
    },
    "schemas": {
      "UserProfile": {
        "type": "object",
        "required": ["id", "username", "email"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique user identifier",
            "example": "user_12345"
          },
          "username": {
            "type": "string",
            "description": "User's display name",
            "example": "johndoe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": "john.doe@example.com"
          },
          "firstName": {
            "type": "string",
            "description": "User's first name",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name",
            "example": "Doe"
          },
          "avatarUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL to user's avatar image",
            "example": "https://example.com/avatars/johndoe.jpg"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Account creation timestamp",
            "example": "2024-01-15T10:30:00Z"
          },
          "lastLoginAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last login timestamp",
            "example": "2025-10-09T14:22:00Z"
          }
        }
      },
      "UserProfileUpdate": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          "lastName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          "avatarUrl": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "UserSettings": {
        "type": "object",
        "properties": {
          "theme": {
            "type": "string",
            "enum": ["light", "dark", "auto"],
            "default": "auto",
            "description": "UI theme preference"
          },
          "language": {
            "type": "string",
            "description": "Preferred language code",
            "example": "en-US"
          },
          "timezone": {
            "type": "string",
            "description": "User's timezone",
            "example": "America/New_York"
          },
          "notifications": {
            "type": "object",
            "properties": {
              "email": {
                "type": "boolean",
                "default": true
              },
              "push": {
                "type": "boolean",
                "default": false
              }
            }
          }
        }
      },
      "DataItem": {
        "type": "object",
        "required": ["id", "title", "createdAt"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique data item identifier",
            "example": "data_67890"
          },
          "title": {
            "type": "string",
            "description": "Data item title",
            "example": "My Important Data"
          },
          "description": {
            "type": "string",
            "description": "Data item description",
            "example": "This contains important user information"
          },
          "content": {
            "type": "string",
            "description": "Data item content"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "DataItemCreate": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200
          },
          "description": {
            "type": "string",
            "maxLength": 1000
          },
          "content": {
            "type": "string"
          }
        }
      },
      "DataList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataItem"
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of items available"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum items per page"
          },
          "offset": {
            "type": "integer",
            "description": "Number of items skipped"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["error", "message"],
        "properties": {
          "error": {
            "type": "string",
            "description": "Error code",
            "example": "unauthorized"
          },
          "message": {
            "type": "string",
            "description": "Human-readable error message",
            "example": "Access token is invalid or expired"
          },
          "details": {
            "type": "object",
            "description": "Additional error details",
            "additionalProperties": true
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "User",
      "description": "User profile and settings operations"
    },
    {
      "name": "Data",
      "description": "User data management operations"
    }
  ]
}
